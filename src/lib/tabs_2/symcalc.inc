SphereVoxel v(pp);
if (v.transform(137) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(4) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(17) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(1) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(2) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(24) && pp->identicalInBB(&v)) {
return (symmetries_t)240;
} else {
return (symmetries_t)117;
}
} else {
return (symmetries_t)107;
}
} else {
SphereVoxel v(pp);
if (v.transform(2) && pp->identicalInBB(&v)) {
return (symmetries_t)116;
} else {
SphereVoxel v(pp);
if (v.transform(3) && pp->identicalInBB(&v)) {
return (symmetries_t)110;
} else {
SphereVoxel v(pp);
if (v.transform(9) && pp->identicalInBB(&v)) {
return (symmetries_t)105;
} else {
return (symmetries_t)103;
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(19) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(40) && pp->identicalInBB(&v)) {
return (symmetries_t)237;
} else {
SphereVoxel v(pp);
if (v.transform(44) && pp->identicalInBB(&v)) {
return (symmetries_t)214;
} else {
return (symmetries_t)104;
}
}
} else {
SphereVoxel v(pp);
if (v.transform(2) && pp->identicalInBB(&v)) {
return (symmetries_t)115;
} else {
SphereVoxel v(pp);
if (v.transform(55) && pp->identicalInBB(&v)) {
return (symmetries_t)199;
} else {
SphereVoxel v(pp);
if (v.transform(59) && pp->identicalInBB(&v)) {
return (symmetries_t)198;
} else {
SphereVoxel v(pp);
if (v.transform(71) && pp->identicalInBB(&v)) {
return (symmetries_t)220;
} else {
SphereVoxel v(pp);
if (v.transform(79) && pp->identicalInBB(&v)) {
return (symmetries_t)222;
} else {
return (symmetries_t)102;
}
}
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(1) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(20) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(24) && pp->identicalInBB(&v)) {
return (symmetries_t)179;
} else {
SphereVoxel v(pp);
if (v.transform(32) && pp->identicalInBB(&v)) {
return (symmetries_t)223;
} else {
return (symmetries_t)86;
}
}
} else {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(102) && pp->identicalInBB(&v)) {
return (symmetries_t)192;
} else {
return (symmetries_t)90;
}
} else {
SphereVoxel v(pp);
if (v.transform(12) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(86) && pp->identicalInBB(&v)) {
return (symmetries_t)173;
} else {
return (symmetries_t)109;
}
} else {
SphereVoxel v(pp);
if (v.transform(98) && pp->identicalInBB(&v)) {
return (symmetries_t)162;
} else {
SphereVoxel v(pp);
if (v.transform(116) && pp->identicalInBB(&v)) {
return (symmetries_t)178;
} else {
return (symmetries_t)77;
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(17) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(28) && pp->identicalInBB(&v)) {
return (symmetries_t)225;
} else {
SphereVoxel v(pp);
if (v.transform(36) && pp->identicalInBB(&v)) {
return (symmetries_t)213;
} else {
return (symmetries_t)83;
}
}
} else {
SphereVoxel v(pp);
if (v.transform(9) && pp->identicalInBB(&v)) {
return (symmetries_t)84;
} else {
SphereVoxel v(pp);
if (v.transform(48) && pp->identicalInBB(&v)) {
return (symmetries_t)212;
} else {
SphereVoxel v(pp);
if (v.transform(50) && pp->identicalInBB(&v)) {
return (symmetries_t)209;
} else {
SphereVoxel v(pp);
if (v.transform(67) && pp->identicalInBB(&v)) {
return (symmetries_t)235;
} else {
SphereVoxel v(pp);
if (v.transform(71) && pp->identicalInBB(&v)) {
return (symmetries_t)224;
} else {
return (symmetries_t)74;
}
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(20) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(3) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(50) && pp->identicalInBB(&v)) {
return (symmetries_t)211;
} else {
return (symmetries_t)87;
}
} else {
SphereVoxel v(pp);
if (v.transform(7) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(67) && pp->identicalInBB(&v)) {
return (symmetries_t)239;
} else {
return (symmetries_t)88;
}
} else {
SphereVoxel v(pp);
if (v.transform(59) && pp->identicalInBB(&v)) {
return (symmetries_t)197;
} else {
SphereVoxel v(pp);
if (v.transform(71) && pp->identicalInBB(&v)) {
return (symmetries_t)219;
} else {
return (symmetries_t)85;
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(21) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(5) && pp->identicalInBB(&v)) {
return (symmetries_t)93;
} else {
SphereVoxel v(pp);
if (v.transform(50) && pp->identicalInBB(&v)) {
return (symmetries_t)234;
} else {
SphereVoxel v(pp);
if (v.transform(52) && pp->identicalInBB(&v)) {
return (symmetries_t)221;
} else {
SphereVoxel v(pp);
if (v.transform(86) && pp->identicalInBB(&v)) {
return (symmetries_t)189;
} else {
SphereVoxel v(pp);
if (v.transform(89) && pp->identicalInBB(&v)) {
return (symmetries_t)180;
} else {
return (symmetries_t)76;
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(60) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(3) && pp->identicalInBB(&v)) {
return (symmetries_t)202;
} else {
SphereVoxel v(pp);
if (v.transform(13) && pp->identicalInBB(&v)) {
return (symmetries_t)157;
} else {
SphereVoxel v(pp);
if (v.transform(23) && pp->identicalInBB(&v)) {
return (symmetries_t)207;
} else {
return (symmetries_t)152;
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(83) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(7) && pp->identicalInBB(&v)) {
return (symmetries_t)228;
} else {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
return (symmetries_t)137;
} else {
SphereVoxel v(pp);
if (v.transform(19) && pp->identicalInBB(&v)) {
return (symmetries_t)233;
} else {
return (symmetries_t)132;
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(99) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(12) && pp->identicalInBB(&v)) {
return (symmetries_t)165;
} else {
SphereVoxel v(pp);
if (v.transform(13) && pp->identicalInBB(&v)) {
return (symmetries_t)147;
} else {
SphereVoxel v(pp);
if (v.transform(19) && pp->identicalInBB(&v)) {
return (symmetries_t)170;
} else {
return (symmetries_t)142;
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(117) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
return (symmetries_t)127;
} else {
SphereVoxel v(pp);
if (v.transform(11) && pp->identicalInBB(&v)) {
return (symmetries_t)183;
} else {
SphereVoxel v(pp);
if (v.transform(23) && pp->identicalInBB(&v)) {
return (symmetries_t)188;
} else {
return (symmetries_t)122;
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(3) && pp->identicalInBB(&v)) {
return (symmetries_t)80;
} else {
SphereVoxel v(pp);
if (v.transform(7) && pp->identicalInBB(&v)) {
return (symmetries_t)81;
} else {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
return (symmetries_t)82;
} else {
SphereVoxel v(pp);
if (v.transform(11) && pp->identicalInBB(&v)) {
return (symmetries_t)89;
} else {
SphereVoxel v(pp);
if (v.transform(12) && pp->identicalInBB(&v)) {
return (symmetries_t)108;
} else {
SphereVoxel v(pp);
if (v.transform(13) && pp->identicalInBB(&v)) {
return (symmetries_t)79;
} else {
SphereVoxel v(pp);
if (v.transform(19) && pp->identicalInBB(&v)) {
return (symmetries_t)75;
} else {
SphereVoxel v(pp);
if (v.transform(23) && pp->identicalInBB(&v)) {
return (symmetries_t)78;
} else {
SphereVoxel v(pp);
if (v.transform(50) && pp->identicalInBB(&v)) {
return (symmetries_t)205;
} else {
SphereVoxel v(pp);
if (v.transform(55) && pp->identicalInBB(&v)) {
return (symmetries_t)155;
} else {
SphereVoxel v(pp);
if (v.transform(59) && pp->identicalInBB(&v)) {
return (symmetries_t)195;
} else {
SphereVoxel v(pp);
if (v.transform(67) && pp->identicalInBB(&v)) {
return (symmetries_t)231;
} else {
SphereVoxel v(pp);
if (v.transform(71) && pp->identicalInBB(&v)) {
return (symmetries_t)217;
} else {
SphereVoxel v(pp);
if (v.transform(82) && pp->identicalInBB(&v)) {
return (symmetries_t)135;
} else {
SphereVoxel v(pp);
if (v.transform(86) && pp->identicalInBB(&v)) {
return (symmetries_t)168;
} else {
SphereVoxel v(pp);
if (v.transform(89) && pp->identicalInBB(&v)) {
return (symmetries_t)145;
} else {
SphereVoxel v(pp);
if (v.transform(98) && pp->identicalInBB(&v)) {
return (symmetries_t)160;
} else {
SphereVoxel v(pp);
if (v.transform(102) && pp->identicalInBB(&v)) {
return (symmetries_t)186;
} else {
SphereVoxel v(pp);
if (v.transform(112) && pp->identicalInBB(&v)) {
return (symmetries_t)125;
} else {
SphereVoxel v(pp);
if (v.transform(116) && pp->identicalInBB(&v)) {
return (symmetries_t)176;
} else {
return (symmetries_t)73;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(4) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(17) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(3) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(1) && pp->identicalInBB(&v)) {
return (symmetries_t)29;
} else {
SphereVoxel v(pp);
if (v.transform(121) && pp->identicalInBB(&v)) {
return (symmetries_t)114;
} else {
return (symmetries_t)23;
}
}
} else {
SphereVoxel v(pp);
if (v.transform(1) && pp->identicalInBB(&v)) {
return (symmetries_t)21;
} else {
SphereVoxel v(pp);
if (v.transform(2) && pp->identicalInBB(&v)) {
return (symmetries_t)27;
} else {
SphereVoxel v(pp);
if (v.transform(9) && pp->identicalInBB(&v)) {
return (symmetries_t)19;
} else {
SphereVoxel v(pp);
if (v.transform(121) && pp->identicalInBB(&v)) {
return (symmetries_t)92;
} else {
SphereVoxel v(pp);
if (v.transform(122) && pp->identicalInBB(&v)) {
return (symmetries_t)113;
} else {
SphereVoxel v(pp);
if (v.transform(129) && pp->identicalInBB(&v)) {
return (symmetries_t)67;
} else {
return (symmetries_t)18;
}
}
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(120) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(2) && pp->identicalInBB(&v)) {
return (symmetries_t)58;
} else {
SphereVoxel v(pp);
if (v.transform(19) && pp->identicalInBB(&v)) {
return (symmetries_t)112;
} else {
return (symmetries_t)53;
}
}
} else {
SphereVoxel v(pp);
if (v.transform(2) && pp->identicalInBB(&v)) {
return (symmetries_t)3;
} else {
SphereVoxel v(pp);
if (v.transform(19) && pp->identicalInBB(&v)) {
return (symmetries_t)25;
} else {
SphereVoxel v(pp);
if (v.transform(122) && pp->identicalInBB(&v)) {
return (symmetries_t)57;
} else {
SphereVoxel v(pp);
if (v.transform(139) && pp->identicalInBB(&v)) {
return (symmetries_t)111;
} else {
return (symmetries_t)2;
}
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(125) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(11) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(102) && pp->identicalInBB(&v)) {
return (symmetries_t)182;
} else {
return (symmetries_t)64;
}
} else {
SphereVoxel v(pp);
if (v.transform(12) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(86) && pp->identicalInBB(&v)) {
return (symmetries_t)164;
} else {
return (symmetries_t)61;
}
} else {
SphereVoxel v(pp);
if (v.transform(21) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(5) && pp->identicalInBB(&v)) {
return (symmetries_t)101;
} else {
return (symmetries_t)70;
}
} else {
SphereVoxel v(pp);
if (v.transform(20) && pp->identicalInBB(&v)) {
return (symmetries_t)55;
} else {
SphereVoxel v(pp);
if (v.transform(98) && pp->identicalInBB(&v)) {
return (symmetries_t)140;
} else {
SphereVoxel v(pp);
if (v.transform(99) && pp->identicalInBB(&v)) {
return (symmetries_t)159;
} else {
SphereVoxel v(pp);
if (v.transform(116) && pp->identicalInBB(&v)) {
return (symmetries_t)119;
} else {
SphereVoxel v(pp);
if (v.transform(117) && pp->identicalInBB(&v)) {
return (symmetries_t)175;
} else {
return (symmetries_t)54;
}
}
}
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(1) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(148) && pp->identicalInBB(&v)) {
return (symmetries_t)191;
} else {
return (symmetries_t)28;
}
} else {
SphereVoxel v(pp);
if (v.transform(12) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(156) && pp->identicalInBB(&v)) {
return (symmetries_t)172;
} else {
return (symmetries_t)13;
}
} else {
SphereVoxel v(pp);
if (v.transform(20) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(120) && pp->identicalInBB(&v)) {
return (symmetries_t)106;
} else {
return (symmetries_t)20;
}
} else {
SphereVoxel v(pp);
if (v.transform(124) && pp->identicalInBB(&v)) {
return (symmetries_t)69;
} else {
SphereVoxel v(pp);
if (v.transform(148) && pp->identicalInBB(&v)) {
return (symmetries_t)177;
} else {
SphereVoxel v(pp);
if (v.transform(156) && pp->identicalInBB(&v)) {
return (symmetries_t)161;
} else {
return (symmetries_t)1;
}
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(130) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(3) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(50) && pp->identicalInBB(&v)) {
return (symmetries_t)201;
} else {
return (symmetries_t)71;
}
} else {
SphereVoxel v(pp);
if (v.transform(17) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(9) && pp->identicalInBB(&v)) {
return (symmetries_t)99;
} else {
return (symmetries_t)65;
}
} else {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
return (symmetries_t)60;
} else {
SphereVoxel v(pp);
if (v.transform(55) && pp->identicalInBB(&v)) {
return (symmetries_t)150;
} else {
SphereVoxel v(pp);
if (v.transform(60) && pp->identicalInBB(&v)) {
return (symmetries_t)154;
} else {
SphereVoxel v(pp);
if (v.transform(89) && pp->identicalInBB(&v)) {
return (symmetries_t)141;
} else {
SphereVoxel v(pp);
if (v.transform(99) && pp->identicalInBB(&v)) {
return (symmetries_t)144;
} else {
return (symmetries_t)59;
}
}
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(150) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(7) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
return (symmetries_t)238;
} else {
SphereVoxel v(pp);
if (v.transform(67) && pp->identicalInBB(&v)) {
return (symmetries_t)227;
} else {
return (symmetries_t)226;
}
}
} else {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
return (symmetries_t)136;
} else {
SphereVoxel v(pp);
if (v.transform(19) && pp->identicalInBB(&v)) {
return (symmetries_t)232;
} else {
SphereVoxel v(pp);
if (v.transform(20) && pp->identicalInBB(&v)) {
return (symmetries_t)218;
} else {
SphereVoxel v(pp);
if (v.transform(67) && pp->identicalInBB(&v)) {
return (symmetries_t)129;
} else {
SphereVoxel v(pp);
if (v.transform(71) && pp->identicalInBB(&v)) {
return (symmetries_t)131;
} else {
SphereVoxel v(pp);
if (v.transform(82) && pp->identicalInBB(&v)) {
return (symmetries_t)130;
} else {
return (symmetries_t)128;
}
}
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(13) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(3) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(158) && pp->identicalInBB(&v)) {
return (symmetries_t)210;
} else {
return (symmetries_t)26;
}
} else {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(124) && pp->identicalInBB(&v)) {
return (symmetries_t)100;
} else {
return (symmetries_t)9;
}
} else {
SphereVoxel v(pp);
if (v.transform(120) && pp->identicalInBB(&v)) {
return (symmetries_t)63;
} else {
SphereVoxel v(pp);
if (v.transform(156) && pp->identicalInBB(&v)) {
return (symmetries_t)146;
} else {
SphereVoxel v(pp);
if (v.transform(158) && pp->identicalInBB(&v)) {
return (symmetries_t)156;
} else {
return (symmetries_t)6;
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(122) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(7) && pp->identicalInBB(&v)) {
return (symmetries_t)72;
} else {
SphereVoxel v(pp);
if (v.transform(23) && pp->identicalInBB(&v)) {
return (symmetries_t)96;
} else {
SphereVoxel v(pp);
if (v.transform(83) && pp->identicalInBB(&v)) {
return (symmetries_t)230;
} else {
SphereVoxel v(pp);
if (v.transform(86) && pp->identicalInBB(&v)) {
return (symmetries_t)139;
} else {
SphereVoxel v(pp);
if (v.transform(99) && pp->identicalInBB(&v)) {
return (symmetries_t)167;
} else {
return (symmetries_t)51;
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(126) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(19) && pp->identicalInBB(&v)) {
return (symmetries_t)98;
} else {
SphereVoxel v(pp);
if (v.transform(50) && pp->identicalInBB(&v)) {
return (symmetries_t)149;
} else {
SphereVoxel v(pp);
if (v.transform(60) && pp->identicalInBB(&v)) {
return (symmetries_t)204;
} else {
SphereVoxel v(pp);
if (v.transform(102) && pp->identicalInBB(&v)) {
return (symmetries_t)120;
} else {
SphereVoxel v(pp);
if (v.transform(117) && pp->identicalInBB(&v)) {
return (symmetries_t)185;
} else {
return (symmetries_t)56;
}
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(148) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
return (symmetries_t)126;
} else {
SphereVoxel v(pp);
if (v.transform(11) && pp->identicalInBB(&v)) {
return (symmetries_t)181;
} else {
SphereVoxel v(pp);
if (v.transform(23) && pp->identicalInBB(&v)) {
return (symmetries_t)187;
} else {
SphereVoxel v(pp);
if (v.transform(112) && pp->identicalInBB(&v)) {
return (symmetries_t)121;
} else {
return (symmetries_t)118;
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(158) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(3) && pp->identicalInBB(&v)) {
return (symmetries_t)200;
} else {
SphereVoxel v(pp);
if (v.transform(20) && pp->identicalInBB(&v)) {
return (symmetries_t)196;
} else {
SphereVoxel v(pp);
if (v.transform(23) && pp->identicalInBB(&v)) {
return (symmetries_t)206;
} else {
SphereVoxel v(pp);
if (v.transform(59) && pp->identicalInBB(&v)) {
return (symmetries_t)151;
} else {
return (symmetries_t)148;
}
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(7) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
return (symmetries_t)15;
} else {
SphereVoxel v(pp);
if (v.transform(68) && pp->identicalInBB(&v)) {
return (symmetries_t)39;
} else {
SphereVoxel v(pp);
if (v.transform(151) && pp->identicalInBB(&v)) {
return (symmetries_t)236;
} else {
return (symmetries_t)7;
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(12) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(87) && pp->identicalInBB(&v)) {
return (symmetries_t)44;
} else {
SphereVoxel v(pp);
if (v.transform(156) && pp->identicalInBB(&v)) {
return (symmetries_t)163;
} else {
SphereVoxel v(pp);
if (v.transform(157) && pp->identicalInBB(&v)) {
return (symmetries_t)171;
} else {
return (symmetries_t)11;
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(17) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(9) && pp->identicalInBB(&v)) {
return (symmetries_t)10;
} else {
SphereVoxel v(pp);
if (v.transform(124) && pp->identicalInBB(&v)) {
return (symmetries_t)97;
} else {
SphereVoxel v(pp);
if (v.transform(129) && pp->identicalInBB(&v)) {
return (symmetries_t)66;
} else {
return (symmetries_t)8;
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(21) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(5) && pp->identicalInBB(&v)) {
return (symmetries_t)17;
} else {
SphereVoxel v(pp);
if (v.transform(120) && pp->identicalInBB(&v)) {
return (symmetries_t)95;
} else {
SphereVoxel v(pp);
if (v.transform(121) && pp->identicalInBB(&v)) {
return (symmetries_t)91;
} else {
return (symmetries_t)16;
}
}
}
} else {
SphereVoxel v(pp);
if (v.transform(3) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(51) && pp->identicalInBB(&v)) {
return (symmetries_t)34;
} else {
SphereVoxel v(pp);
if (v.transform(159) && pp->identicalInBB(&v)) {
return (symmetries_t)208;
} else {
return (symmetries_t)4;
}
}
} else {
SphereVoxel v(pp);
if (v.transform(11) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(103) && pp->identicalInBB(&v)) {
return (symmetries_t)49;
} else {
SphereVoxel v(pp);
if (v.transform(149) && pp->identicalInBB(&v)) {
return (symmetries_t)190;
} else {
return (symmetries_t)22;
}
}
} else {
SphereVoxel v(pp);
if (v.transform(83) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(133) && pp->identicalInBB(&v)) {
return (symmetries_t)134;
} else {
SphereVoxel v(pp);
if (v.transform(136) && pp->identicalInBB(&v)) {
return (symmetries_t)216;
} else {
return (symmetries_t)38;
}
}
} else {
SphereVoxel v(pp);
if (v.transform(19) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(156) && pp->identicalInBB(&v)) {
return (symmetries_t)169;
} else {
return (symmetries_t)12;
}
} else {
SphereVoxel v(pp);
if (v.transform(60) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(136) && pp->identicalInBB(&v)) {
return (symmetries_t)194;
} else {
return (symmetries_t)33;
}
} else {
SphereVoxel v(pp);
if (v.transform(117) && pp->identicalInBB(&v)) {
SphereVoxel v(pp);
if (v.transform(133) && pp->identicalInBB(&v)) {
return (symmetries_t)124;
} else {
return (symmetries_t)48;
}
} else {
SphereVoxel v(pp);
if (v.transform(10) && pp->identicalInBB(&v)) {
return (symmetries_t)5;
} else {
SphereVoxel v(pp);
if (v.transform(20) && pp->identicalInBB(&v)) {
return (symmetries_t)14;
} else {
SphereVoxel v(pp);
if (v.transform(23) && pp->identicalInBB(&v)) {
return (symmetries_t)24;
} else {
SphereVoxel v(pp);
if (v.transform(50) && pp->identicalInBB(&v)) {
return (symmetries_t)30;
} else {
SphereVoxel v(pp);
if (v.transform(55) && pp->identicalInBB(&v)) {
return (symmetries_t)31;
} else {
SphereVoxel v(pp);
if (v.transform(59) && pp->identicalInBB(&v)) {
return (symmetries_t)32;
} else {
SphereVoxel v(pp);
if (v.transform(67) && pp->identicalInBB(&v)) {
return (symmetries_t)35;
} else {
SphereVoxel v(pp);
if (v.transform(71) && pp->identicalInBB(&v)) {
return (symmetries_t)36;
} else {
SphereVoxel v(pp);
if (v.transform(82) && pp->identicalInBB(&v)) {
return (symmetries_t)37;
} else {
SphereVoxel v(pp);
if (v.transform(86) && pp->identicalInBB(&v)) {
return (symmetries_t)40;
} else {
SphereVoxel v(pp);
if (v.transform(89) && pp->identicalInBB(&v)) {
return (symmetries_t)41;
} else {
SphereVoxel v(pp);
if (v.transform(98) && pp->identicalInBB(&v)) {
return (symmetries_t)42;
} else {
SphereVoxel v(pp);
if (v.transform(99) && pp->identicalInBB(&v)) {
return (symmetries_t)43;
} else {
SphereVoxel v(pp);
if (v.transform(102) && pp->identicalInBB(&v)) {
return (symmetries_t)45;
} else {
SphereVoxel v(pp);
if (v.transform(112) && pp->identicalInBB(&v)) {
return (symmetries_t)46;
} else {
SphereVoxel v(pp);
if (v.transform(116) && pp->identicalInBB(&v)) {
return (symmetries_t)47;
} else {
SphereVoxel v(pp);
if (v.transform(120) && pp->identicalInBB(&v)) {
return (symmetries_t)50;
} else {
SphereVoxel v(pp);
if (v.transform(124) && pp->identicalInBB(&v)) {
return (symmetries_t)52;
} else {
SphereVoxel v(pp);
if (v.transform(133) && pp->identicalInBB(&v)) {
return (symmetries_t)62;
} else {
SphereVoxel v(pp);
if (v.transform(136) && pp->identicalInBB(&v)) {
return (symmetries_t)68;
} else {
SphereVoxel v(pp);
if (v.transform(141) && pp->identicalInBB(&v)) {
return (symmetries_t)94;
} else {
SphereVoxel v(pp);
if (v.transform(149) && pp->identicalInBB(&v)) {
return (symmetries_t)123;
} else {
SphereVoxel v(pp);
if (v.transform(151) && pp->identicalInBB(&v)) {
return (symmetries_t)133;
} else {
SphereVoxel v(pp);
if (v.transform(156) && pp->identicalInBB(&v)) {
return (symmetries_t)138;
} else {
SphereVoxel v(pp);
if (v.transform(157) && pp->identicalInBB(&v)) {
return (symmetries_t)143;
} else {
SphereVoxel v(pp);
if (v.transform(159) && pp->identicalInBB(&v)) {
return (symmetries_t)153;
} else {
SphereVoxel v(pp);
if (v.transform(168) && pp->identicalInBB(&v)) {
return (symmetries_t)158;
} else {
SphereVoxel v(pp);
if (v.transform(182) && pp->identicalInBB(&v)) {
return (symmetries_t)166;
} else {
SphereVoxel v(pp);
if (v.transform(195) && pp->identicalInBB(&v)) {
return (symmetries_t)174;
} else {
SphereVoxel v(pp);
if (v.transform(201) && pp->identicalInBB(&v)) {
return (symmetries_t)184;
} else {
SphereVoxel v(pp);
if (v.transform(205) && pp->identicalInBB(&v)) {
return (symmetries_t)193;
} else {
SphereVoxel v(pp);
if (v.transform(217) && pp->identicalInBB(&v)) {
return (symmetries_t)203;
} else {
SphereVoxel v(pp);
if (v.transform(224) && pp->identicalInBB(&v)) {
return (symmetries_t)215;
} else {
SphereVoxel v(pp);
if (v.transform(239) && pp->identicalInBB(&v)) {
return (symmetries_t)229;
} else {
return (symmetries_t)0;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
